Q1- https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/

class Solution {
public:
    int maxProfit(std::vector<int>& prices) {
        if (prices.empty()) {
            return 0;
        }

        int min_price = prices[0];
        int max_profit = 0;

        for (int i = 1; i < prices.size(); ++i) {
            max_profit = std::max(max_profit, prices[i] - min_price);
            min_price = std::min(min_price, prices[i]);
        }

        return max_profit;
    }
};

Q2- https://leetcode.com/problems/longest-substring-without-repeating-characters/


class Solution {
public:
    int lengthOfLongestSubstring(std::string s) {
        int n = s.length();
        int left = 0, right = 0, maxLen = 0;
        std::unordered_set<char> charSet;

        while (right < n) {
            if (charSet.find(s[right]) == charSet.end()) {
                charSet.insert(s[right]);
                maxLen = std::max(maxLen, right - left + 1);
                ++right;
            } else {
                charSet.erase(s[left]);
                ++left;
            }
        }

        return maxLen;
    }
};
